---
- name: Install Node.js and npm
  hosts: nodejs_servers
  become: yes

  tasks:
    - name: Check if package lists are updated
      stat:
        path: /var/lib/apt/lists/lock
      register: apt_lists_lock

    - name: Update package lists
      apt:
        update_cache: yes
      when: apt_lists_lock.stat.exists == false

    - name: Check if Node.js is installed
      command: node -v
      register: node_version
      ignore_errors: true

    - name: Install Node.js
      apt:
        name: nodejs
        state: present
      when: node_version.rc != 0

    - name: Check if npm is installed
      command: npm -v
      register: npm_version
      ignore_errors: true

    - name: Install npm
      apt:
        name: npm
        state: present
      when: npm_version.rc != 0
    
    - name: Check if pm2 is installed
      command: pm2 -v
      register: pm2_version
      ignore_errors: true

    - name: Install pm2
      npm:
        name: pm2
        global: yes
      when: pm2_version.rc != 0


- name: Deploy Port Forwarding Service
  hosts: nodejs_servers
  become: yes

  tasks:
    - name: Copy systemd service file
      template:
        src: ../nodejenkins.service.j2
        dest: /etc/systemd/system/nodejenkins.service

    - name: Enable the service
      command: systemctl enable nodejenkins

    - name: Start the service
      command: systemctl start nodejenkins

- name: Setup database
  hosts: nodejs_servers
  become: yes
  vars:
    mysql_root_password: k
    mysql_db_name: employeedb
    mysql_user_name: thyler
    mysql_user_password: k

  tasks:
    - name: Install MySQL Python package
      apt:
        name: python3-mysqldb
      become: yes

    - name: Create Database
      mysql_db:
        name: "{{ mysql_db_name }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"
        state: present

    - name: Create MySQL User
      mysql_user:
        name: "{{ mysql_user_name }}"
        password: "{{ mysql_user_password }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"
        priv: "{{ mysql_db_name }}.*:ALL"
        state: present

    - name: Reload MySQL service
      service:
        name: mysql
        state: reloaded
    
    - name: Copy database file
      synchronize:
        src: "./gestSalaire.sql"
        dest: "/home/thyler/nodejenkins/"
      become: no

    - name: Load SQL file into MySQL
      command: "mysql -h localhost -u root -p{{ mysql_root_password }} {{ mysql_db_name }} -e 'source /home/thyler/nodejenkins/gestSalaire.sql'"
      register: migration_result
      ignore_errors: yes

    - name: Check if migration was successful
      fail:
        msg: "Database migration failed. {{ migration_result.stderr }}"
      when: migration_result.rc != 0

    - name: Reload MySQL service on target server
      service:
        name: mysql
        state: reloaded

